# Generated by Django 4.2.17 on 2024-12-12 22:03

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('students', '0009_student_completed'),
        ('corecode', '0002_signature'),
    ]

    operations = [
        migrations.CreateModel(
            name='StudentInfos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disprine', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('F', 'F')], default='A', help_text="Rate the student's discipline (A-F).", max_length=1, verbose_name='Discipline')),
                ('sports', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('F', 'F')], default='A', help_text="Rate the student's participation in sports (A-F).", max_length=1, verbose_name='Sports')),
                ('care_of_property', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('F', 'F')], default='A', help_text='Rate how well the student cares for property (A-F).', max_length=1, verbose_name='Care of Property')),
                ('collaborations', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('F', 'F')], default='A', help_text="Rate the student's collaboration with peers (A-F).", max_length=1, verbose_name='Collaboration')),
                ('date_of_closing', models.DateField(default=django.utils.timezone.now, help_text='The date when the term/session closes.', verbose_name='Date of Closing')),
                ('date_of_opening', models.DateField(default=django.utils.timezone.now, help_text='The date when the next term/session opens.', verbose_name='Date of Opening')),
                ('teacher_comments', models.TextField(blank=True, help_text='Additional comments from the teacher.', verbose_name="Teacher's Comments")),
                ('head_comments', models.TextField(blank=True, help_text='Comments from the head of the school.', verbose_name="Head's Comments")),
                ('academic_answers', models.TextField(blank=True, help_text='Any academic-related notes or answers.', verbose_name='Academic Answers')),
                ('exam', models.ForeignKey(default=None, help_text='Select the exam type this information relates to.', on_delete=django.db.models.deletion.CASCADE, to='corecode.examtype', verbose_name='Exam Type')),
                ('session', models.ForeignKey(default=None, help_text='Select the academic session this information relates to.', on_delete=django.db.models.deletion.CASCADE, to='corecode.academicsession', verbose_name='Academic Session')),
                ('student', models.ForeignKey(blank=True, help_text='Select the student this information belongs to.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='students.student', verbose_name='Student')),
                ('term', models.ForeignKey(default=None, help_text='Select the academic term this information relates to.', on_delete=django.db.models.deletion.CASCADE, to='corecode.academicterm', verbose_name='Academic Term')),
            ],
            options={
                'verbose_name': 'Student Information',
                'verbose_name_plural': 'Students Information',
                'permissions': [('view_single_student_results', 'Can view single student results')],
                'indexes': [models.Index(fields=['student', 'session', 'term', 'exam'], name='result_stud_student_b0c870_idx')],
            },
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.DecimalField(blank=True, decimal_places=2, default=None, help_text='Score obtained in this exam (0-100).', max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Score')),
                ('average', models.DecimalField(decimal_places=2, default=0.0, help_text='Automatically calculated average score.', max_digits=5, verbose_name='Average Score')),
                ('total', models.DecimalField(decimal_places=2, default=0.0, help_text='The total score across all exams if calculated cumulatively.', max_digits=5, verbose_name='Total Score')),
                ('overall_average', models.DecimalField(decimal_places=2, default=0.0, help_text='Overall average across multiple subjects/exams.', max_digits=5, verbose_name='Overall Average')),
                ('overall_status', models.CharField(default='FAIL', help_text='Overall pass/fail status.', max_length=10, verbose_name='Overall Status')),
                ('status', models.CharField(default='FAIL', help_text='Pass/fail status for this particular subject result.', max_length=10, verbose_name='Subject Status')),
                ('gpa', models.DecimalField(decimal_places=3, default=0.0, help_text='Calculated GPA for this student across subjects.', max_digits=5, verbose_name='GPA')),
                ('subject_grade', models.CharField(default='F', help_text='Grade achieved in this subject (A-F).', max_length=1, verbose_name='Subject Grade')),
                ('current_class', models.ForeignKey(help_text='Select the class for this result.', on_delete=django.db.models.deletion.CASCADE, to='corecode.studentclass', verbose_name='Class')),
                ('exam', models.ForeignKey(help_text='Select the exam type (e.g. Mid-Term, Final).', on_delete=django.db.models.deletion.CASCADE, to='corecode.examtype', verbose_name='Exam Type')),
                ('session', models.ForeignKey(help_text='Select the academic session for this result.', on_delete=django.db.models.deletion.CASCADE, to='corecode.academicsession', verbose_name='Academic Session')),
                ('student', models.ForeignKey(blank=True, help_text='Select the student this result belongs to.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='students.student', verbose_name='Student')),
                ('subject', models.ForeignKey(help_text='Select the subject for this result.', on_delete=django.db.models.deletion.CASCADE, to='corecode.subject', verbose_name='Subject')),
                ('term', models.ForeignKey(help_text='Select the academic term for this result.', on_delete=django.db.models.deletion.CASCADE, to='corecode.academicterm', verbose_name='Academic Term')),
            ],
            options={
                'ordering': ['subject'],
                'permissions': [('delete_page', 'Can delete page results')],
                'indexes': [models.Index(fields=['student', 'session', 'term', 'exam', 'current_class', 'subject'], name='result_resu_student_ed1aee_idx')],
                'unique_together': {('student', 'session', 'term', 'exam', 'current_class', 'subject')},
            },
        ),
    ]
